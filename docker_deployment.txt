# Dockerfile for Deepfake Detection API
FROM python:3.9-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p models/cnn_visual_detector \
    models/bert_text_analyzer \
    models/hybrid_model \
    logs

# Expose port
EXPOSE 5000

# Set environment variables
ENV FLASK_APP=api/app.py
ENV PYTHONUNBUFFERED=1

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:5000/health')"

# Run the application
CMD ["python", "api/app.py"]

# ============================================================================
# docker-compose.yml
# ============================================================================

# version: '3.8'
# 
# services:
#   deepfake-api:
#     build: .
#     container_name: deepfake-detection-api
#     ports:
#       - "5000:5000"
#     volumes:
#       - ./models:/app/models
#       - ./logs:/app/logs
#     environment:
#       - FLASK_ENV=production
#       - MODEL_PATH=/app/models/
#       - LOG_LEVEL=INFO
#     restart: unless-stopped
#     networks:
#       - deepfake-network
# 
#   nginx:
#     image: nginx:alpine
#     container_name: deepfake-nginx
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf:ro
#       - ./ssl:/etc/nginx/ssl:ro
#     depends_on:
#       - deepfake-api
#     restart: unless-stopped
#     networks:
#       - deepfake-network
# 
# networks:
#   deepfake-network:
#     driver: bridge

# ============================================================================
# .dockerignore
# ============================================================================

# __pycache__
# *.pyc
# *.pyo
# *.pyd
# .Python
# env/
# venv/
# .venv
# pip-log.txt
# pip-delete-this-directory.txt
# .tox/
# .coverage
# .coverage.*
# .cache
# nosetests.xml
# coverage.xml
# *.cover
# *.log
# .git
# .gitignore
# .mypy_cache
# .pytest_cache
# .hypothesis
# 
# # IDE
# .vscode/
# .idea/
# *.swp
# *.swo
# *~
# 
# # Project specific
# data/raw/
# notebooks/
# docs/
# tests/
# *.md
# LICENSE

# ============================================================================
# Build and Run Commands
# ============================================================================

# Build the Docker image:
# docker build -t deepfake-detection-api:latest .

# Run the container:
# docker run -d -p 5000:5000 --name deepfake-api \
#   -v $(pwd)/models:/app/models \
#   -v $(pwd)/logs:/app/logs \
#   deepfake-detection-api:latest

# Run with docker-compose:
# docker-compose up -d

# View logs:
# docker logs -f deepfake-api

# Stop container:
# docker stop deepfake-api

# Remove container:
# docker rm deepfake-api

# Push to registry:
# docker tag deepfake-detection-api:latest your-registry/deepfake-detection-api:latest
# docker push your-registry/deepfake-detection-api:latest
